$mod = SUPER
$modshift = $mod SHIFT

# App Shortcuts
# App Launcher (only scans executables, cant be bothered with desktop entries)
# my-tofi-run is defined in tofi.nix and adds foot if package is in tuiPackages
bind = $mod,SPACE,exec,uwsm app -- $(my-tofi-run)
# Terminal
bind = $mod,RETURN,exec,uwsm app -- foot
# Settings
bind = $mod,S,exec,[workspace 5] uwsm app -- foot -D ~/amnytas nvim ~/amnytas
# File Manager
bind = $mod,N,exec,uwsm app -- foot yazi
# Alt File Manager
bind = $modshift,N,exec,uwsm app -- Thunar
# Gaming
bind = $mod,G,exec,[workspace 9 silent] uwsm app -- steam
# Browser
bind = $mod,B,exec,[workspace 7] uwsm app -- firefox
# Alt Browser
bind = $modshift,B,exec,[workspace 8] uwsm app -- helium
# Music Player
bind = $mod,Y,exec,uwsm app -- youtube-music
# Discord
bind = $mod,D,exec,uwsm app -- vesktop --enable-wayland-ime
# Windows Task Manager keybind cause why not
bind = CTRL ALT,DELETE,exec,uwsm app -- foot btop -p 0
# Toggle Japanese Input
bind = $mod,I,exec,if systemctl --user is-active --quiet app-org.fcitx.Fcitx5@autostart.service; then systemctl --user stop app-org.fcitx.Fcitx5@autostart.service; else systemctl --user start app-org.fcitx.Fcitx5@autostart.service; fi
# Having mozc running in the background sometimes blocks some input
# which is a problem for gaming,
# so i only activate when i need it and have mozc as my only layout in fcitx5

# Window Management
# Quit Window (i was a mac person once :P)
bind = $mod,Q,killactive
# Kill the next Window you click (when quit doesnt work)
bind = $mod,BACKSPACE,exec,hyprctl kill
# Kill Hyprland, was more useful without greetd
bind = $mod,MINUS,exit

# Open Special Workspace
bind = $mod,Z,togglespecialworkspace
bind = $modshift,Z,movetoworkspace, special
# Some special special workspaces
bind = $modshift,RETURN,exec,toggle foot foot
bind = $mod,C,exec,toggle crunchyroll chrome-
bind = $modshift,C,exec,toggle netflix chrome-
bind = $mod,W,exec,toggle wanikani chrome-
bind = $mod,M,exec,toggle mailproton chrome-
bind = $mod,P,exec,toggle passproton chrome-
# Open Widgets
bind = $mod,E,exec,qs ipc call dashboard toggle
# Toggle Bar on current monitor
bind = $modshift,E,exec,togglecurrentbar

# move focus with hjkl
bind = $mod,H,movefocus,l
bind = $mod,L,movefocus,r
bind = $mod,K,movefocus,u
bind = $mod,J,movefocus,d
# switch workspace with HL
bind = $modshift,H,workspace,-1
bind = $modshift,L,workspace,+1
# switch workspace and take window with you with JK
bind = $modshift,K,movetoworkspace,-1
bind = $modshift,J,movetoworkspace,+1

#,XF86Bluetooth, exec, bcn
bind = $mod,R,swapnext, # swap window
bind = $modshift,R,exec,rotate # rotate current monitor
bind = $mod,V,togglefloating, # toggle floating for the focused window
bind = $mod,F,fullscreen, # fullscreen focused window

# disable gaps and borders on current workspace and disable bar on the current monitor,
# practically makes a tiled window fullscreen. shouldve probably called it maximize xD
bind = $modshift,F,exec,pseudo-fullscreen

# workspace controls
bind = $modshift,right,movetoworkspace,+1 # move focused window to the next ws
bind = $modshift,left,movetoworkspace,-1 # move focused window to the previous ws
bind = $mod,right,workspace,+1 # move focus to the next ws
bind = $mod,left,workspace,-1 # move focus to the previous ws
bind = $mod,mouse_up,workspace,e+1 # move to the next ws
bind = $mod,mouse_down,workspace,e-1 # move to the previous ws
bind = $modshift,mouse_up,movetoworkspace,+1 # move to the next ws
bind = $modshift,mouse_down,movetoworkspace,-1 # move to the previous ws

# recording
bind = $modshift,X,exec,wf-recorder -y -f ~/Videos/wf-recording.mp4 -g "$(slurp)"
bind = CTRL $mod,X,exec,wf-recorder -y -f ~/Videos/wf-recording.mp4 -g "$(slurp -o)"
# stop recording
bind = $mod,X,exec,stop-recording

# Screenshots
bind = $modshift,S,exec,grimblast --freeze save area - | swappy -f - -o - | wl-copy; wl-paste > ~/Pictures/screenshot.png
bind = CTRL $modshift,S,exec,grimblast save area - | swappy -f - -o - | wl-copy; wl-paste > ~/Pictures/screenshot.png
bind = CTRL $mod,S,exec,grimblast --freeze save output - | swappy -f - -o - | wl-copy; wl-paste > ~/Pictures/Screenshot.png

# Color Picker
bind = $modshift,C,exec, hyprpicker | wl-copy
# media controls
bindl = ,XF86AudioPlay,exec,playerctl play-pause
bindl = ,XF86AudioPrev,exec,playerctl previous
bindl = ,XF86AudioNext,exec,playerctl next
bindl = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindl = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindl = ,XF86AudioMute,exec,playerctl play-pause # remap epomaker knob to play/plause
# bindl = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindm = $mod,mouse:272,movewindow
bindm = $mod,mouse:273,resizewindow

# Workspaces
bind = $mod, 1, workspace, 1
bind = $mod, 2, workspace, 2
bind = $mod, 3, workspace, 3
bind = $mod, 4, workspace, 4
bind = $mod, 5, workspace, 5
bind = $mod, 6, workspace, 6
bind = $mod, 7, workspace, 7
bind = $mod, 8, workspace, 8
bind = $mod, 9, workspace, 9
bind = $mod, 0, workspace, 10
bind = $modshift, 1, movetoworkspace, 1
bind = $modshift, 2, movetoworkspace, 2
bind = $modshift, 3, movetoworkspace, 3
bind = $modshift, 4, movetoworkspace, 4
bind = $modshift, 5, movetoworkspace, 5
bind = $modshift, 6, movetoworkspace, 6
bind = $modshift, 7, movetoworkspace, 7
bind = $modshift, 8, movetoworkspace, 8
bind = $modshift, 9, movetoworkspace, 9
bind = $modshift, 0, movetoworkspace, 10
